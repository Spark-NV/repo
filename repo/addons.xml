<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<addons>
<addon id="script.module.cocoscrapers" name="Scrapers Module" version="91.0.37" provider-name="Lumina">
	<requires>
		<import addon="xbmc.python" version="3.0.0" />
		<import addon="script.module.requests" />
	</requires>
	<extension point="xbmc.python.pluginsource" library="lib/default.py">
		<provides>executable</provides>
	</extension> 
	<extension point="xbmc.service" library="lib/service.py" start="startup" />
	<extension point="xbmc.python.module" library="lib" />
	<extension point="xbmc.addon.metadata">
		<reuselanguageinvoker>false</reuselanguageinvoker>
		<summary lang="en">CocoScrapers Module</summary>
		<description>A module that can be used to provide site scrapers.</description>
		<platform>all</platform>
		<license>GNU GENERAL PUBLIC LICENSE. Version 3, 29 June 2007</license>
		<forum></forum>
		<website></website>
		<source></source>
		<disclaimer lang="en">The author is not responsible for the use of this addon. The author is not responsible for the content found using this addon. The author does not host or own any content found within this addon.[CR]The author is in no way affiliated with Kodi, Team Kodi, or the XBMC Foundation.[CR]This is a Non-profit resource, organized solely for educational purposes which is protected under the Fair-Use doctrine of the Copyright Act, Specifically section 107, which does promote freedom of expression, by permitting the unlicensed use of copyright-protected works.</disclaimer>
		<assets>
			<icon>icon.png</icon>
		</assets>
		<news></news>
	</extension>
</addon>
<addon id="plugin.video.umbrella" name="Lumina" provider-name="Lumina" version="96.7.46">
	<requires>
		<import addon="xbmc.python" version="3.0.0" />
		<import addon="script.module.requests" />
		<import addon="script.module.cocoscrapers" />
		<import addon="plugin.video.youtube" optional="true" />
	</requires>
	<extension point="xbmc.python.pluginsource" library="umbrella.py">
		<provides>video</provides>
	</extension>
	<extension point="kodi.context.item">
		<menu id="kodi.core.main">
			<item library="resources\lib\context\addtoLibrary.py">
				<label>$INFO[Window(home).Property(context.umbrella.showUmbrella)]Add to Library</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.addtoLibrary)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\addtoFavourite.py">
				<label>$INFO[Window(home).Property(context.umbrella.showUmbrella)]Add/Remove Favourite</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.addtoFavourite)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\artworkCustomize.py">
				<label>$INFO[Window(home).Property(context.umbrella.showUmbrella)]Customize Artwork</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.artworkCustomize)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,movie) | String.IsEqual(ListItem.dbtype,season)]
				</visible>
			</item>
			<item library="resources\lib\context\playTrailer.py">
				<label>$INFO[Window(home).Property(context.umbrella.showUmbrella)]Play Trailer</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.playTrailer)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\playTrailerSelect.py">
				<label>$INFO[Window(home).Property(context.umbrella.showUmbrella)]Play Trailer (Select)</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.playTrailerSelect)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\traktManager.py">
				<label>$INFO[Window(home).Property(context.umbrella.showUmbrella)]Trakt Manager</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.traktManager)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\mdblistManager.py">
				<label>$INFO[Window(home).Property(context.umbrella.showUmbrella)]MDBList Manager</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.mdblistManager)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\clearProviders.py">
				<label>$INFO[Window(home).Property(context.umbrella.showUmbrella)]Clear Providers</label>
				<visible>
					[!String.IsEmpty(Window(home).Property(context.umbrella.clearProviders)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.umbrella/?action=play) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]] |
					[String.Contains(Container.FolderPath,videodb://) +
					[String.Contains(Container.ListItem.Path,Window(home).Property(umbrella.movieLib.path)) | String.Contains(Container.ListItem.Path,Window(home).Property(umbrella.tvLib.path))] +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]]
				</visible>
			</item>
			<item library="resources\lib\context\clearBookmark.py">
				<label>$INFO[Window(home).Property(context.umbrella.showUmbrella)]Clear Item Bookmark</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.clearBookmark)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.umbrella/?action=play) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					ListItem.IsResumable +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\rescrape.py">
				<label>$INFO[Window(home).Property(context.umbrella.showUmbrella)]Rescrape Item</label>
				<visible>
					[!String.IsEmpty(Window(home).Property(context.umbrella.rescrape)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.umbrella/?action=play) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]]
				</visible>
			</item>
			<item library="resources\lib\context\libMdblistManager.py">
				<label>$INFO[Window(home).Property(context.umbrella.showUmbrella)]MDBList Watchlist Lib</label>
				<visible>
					[String.Contains(Container.FolderPath,videodb://) | String.Contains(Container.ListItem.FolderPath,videodb://)] +
					[String.Contains(Container.ListItem.Path,Window(home).Property(umbrella.movieLib.path)) | String.Contains(Container.ListItem.Path,Window(home).Property(umbrella.tvLib.path))] +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\addLibtoFavourite.py">
				<label>$INFO[Window(home).Property(context.umbrella.showUmbrella)]Add/Remove Favourite</label>
				<visible>
					[String.Contains(Container.FolderPath,videodb://) | String.Contains(Container.ListItem.FolderPath,videodb://)] +
					[String.Contains(Container.ListItem.Path,Window(home).Property(umbrella.movieLib.path)) | String.Contains(Container.ListItem.Path,Window(home).Property(umbrella.tvLib.path))] +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\libRescrape.py">
				<label>$INFO[Window(home).Property(context.umbrella.showUmbrella)]Rescrape Lib Item</label>
				<visible>
					[String.Contains(Container.FolderPath,videodb://) | String.Contains(Container.ListItem.FolderPath,videodb://)] +
					[String.Contains(Container.ListItem.Path,Window(home).Property(umbrella.movieLib.path)) | String.Contains(Container.ListItem.Path,Window(home).Property(umbrella.tvLib.path))] +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\playFromHere.py">
				<label>$INFO[Window(home).Property(context.umbrella.showUmbrella)]Play from here</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.playFromHere)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					String.IsEqual(ListItem.dbtype,episode)
				</visible>
			</item>
			<item library="resources\lib\context\autoPlay.py">
				<label>$INFO[Window(home).Property(context.umbrella.showUmbrella)]Auto Play</label>
				<visible>
					String.IsEmpty(Window(home).Property(umbrella.autoPlay.enabled)) +
					!String.IsEmpty(Window(home).Property(context.umbrella.autoPlay)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.umbrella/?action=play) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\sourceSelect.py">
				<label>$INFO[Window(home).Property(context.umbrella.showUmbrella)]Source Select</label>
				<visible>
					!String.IsEmpty(Window(home).Property(umbrella.autoPlay.enabled)) +
					!String.IsEmpty(Window(home).Property(context.umbrella.sourceSelect)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.umbrella/?action=play) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\findSimilar.py">
				<label>$INFO[Window(home).Property(context.umbrella.showUmbrella)]Find Similar</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.findSimilar)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\browseSeries.py">
				<label>$INFO[Window(home).Property(context.umbrella.showUmbrella)]Browse Series</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.browseSeries)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow)]
				</visible>
			</item>
			<item library="resources\lib\context\browseEpisodes.py">
				<label>$INFO[Window(home).Property(context.umbrella.showUmbrella)]Browse Episodes</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.browseEpisodes)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					String.IsEqual(ListItem.dbtype,episode)
				</visible>
			</item>
		</menu>
	</extension>
	<extension point="xbmc.service" library="service.py" start="startup" />
	<extension point="xbmc.python.module" library="resources/lib/" />
	<extension point="xbmc.addon.metadata">
		<reuselanguageinvoker>true</reuselanguageinvoker>
		<summary lang="en">[B]Umbrella[/B] - We do not host any of the contents streamed</summary>
		<description lang="en">[B]Umbrella[/B][CR] This addon does not form part of the Kodi Media Centre. Please do not seek assistance with this addon from any of the Official Kodi Support Channels.[CR]The author does not host any of the content in this addon and takes no responsibility for content found. We do not know anything about a lab under Raccoon City. Umbrella is not actually an umbrella and will not shield you from rain.</description>
		<platform>all</platform>
		<license>GNU GENERAL PUBLIC LICENSE. Version 3, 29 June 2007</license>
		<forum />
		<website>https://umbrellaplug.github.io</website>
		<source>https://raw.githubusercontent.com/umbrellaplug/umbrellaplug.github.io/</source>
		<disclaimer lang="en">The author of this addon does not host any of the content which is found and have no affiliation with any of the content providers. This addon simply searches websites for content. Use at your own risk!</disclaimer>
		<assets>
			<icon>icon.png</icon>
		</assets>
		<news>
[B]Update - v6.7.46 - June 16th, 2025[/B]
--[Change] Modified MDBList add and remove to only use watchlist and static lists.
--[Change] Suggested library change from PR request.
--[Fix] Fixed issue with mdblists and tv shows.
--[Fix] Made changes to mdblist api url used for lists and fixed ai generated lists not working.
		</news>
	</extension>

</addon>
<addon id="skin.amber.Lumina" version="93.99.02" name="Lumina Amber" provider-name="Lumina">
	<requires>
		<import addon="xbmc.gui" version="5.17.0"/>
		<import addon="script.favourites" version="7.1.1"/>
		<import addon="resource.uisounds.amber" version="1.0.0"/>
		<import addon="script.skinshortcuts" version="1.0.17"/>
	</requires>
	<extension point="xbmc.gui.skin" debugging="false">
		<res width="1920" height="1080" aspect="16:9" default="true" folder="1080i" />
	</extension>
	<extension point="xbmc.addon.metadata">
		<platform>all</platform>
		<assets>
			<icon>resources/icon.png</icon>
		</assets>
		<news>3.4.32 (11-01-2022)
			- Linked movie info in episodes list dialog
			- Many, many fixes!
		</news>
		<summary lang="en_US">No bloatware, just your media with an easy to navigate interface</summary>
		<description lang="en_US">No bloatware, just your media with an easy to navigate interface.[CR]Uses some textures from Mediastream and Aeon skins.</description>
	</extension>
</addon>
<addon id="service.subtitles.a4ksubtitles"
       name="a4kSubtitles"
       version="93.21.1"
       provider-name="Lumina">
    <requires>
      <import addon="script.module.requests"/>
      <import addon="vfs.libarchive" optional="true"/>
    </requires>
    <extension point="xbmc.subtitle.module" library="main.py"/>
    <extension point="xbmc.service" library="main_service.py" />
    <extension point="xbmc.addon.metadata">
        <summary lang="en">a4kSubtitles - Multi-Source Subtitles Addon</summary>
        <description>
Multi-source subtitles addon.
        </description>
        <platform>all</platform>
        <reuselanguageinvoker>true</reuselanguageinvoker>
        <license>MIT License</license>
        <assets>
            <icon>icon.png</icon>
        </assets>
    <news>
[v3.21.1]:
  * Dynamic AI subtitles translation from English to the selected Preferred Language in KODI's settings
    * Requires API Key
    * Currently only OpenAI and NexosAI backends are supported
    * For NexosAI model should be specified by ID, not name
    * Turning AI translation on - disables usage of embedded subtitles
    * Currently only supported when using auto-search or auto-download feature
        </news>
    </extension>
</addon>
<addon id="skin.aeon.nox.Lumina" version="91.0.3" name="Lumina SiLVO" provider-name="Lumina">
	<requires>
		<import addon="xbmc.gui" version="5.17.0" />
		<import addon="script.skinshortcuts" version="2.0.1" />
		<import addon="resource.images.studios.white" version="0.0.1" />
		<import addon="resource.images.recordlabels.white" version="0.0.1" />
	</requires>
	<extension point="xbmc.gui.skin" debugging="false">
		<res width="1920" height="1080" aspect="16:9" default="true" folder="16x9" />
	</extension>
	<extension point="xbmc.addon.metadata">
		<summary lang="af_ZA">Geskep deur BigNoid, Modded deur SiLVO, en Widgets deur Mr. V</summary>
		<summary lang="de_DE">Erstellt von BigNoid, modifiziert von SiLVO, Widgets von Mr. V</summary>
		<summary lang="el_GR">Created by BigNoid, Modded by SiLVO, and Widgets by Mr. V</summary>
		<summary lang="en_AU">Created by BigNoid, Modded by SiLVO, and Widgets by Mr. V</summary>
		<summary lang="en_GB">Created by BigNoid, Modded by SiLVO, and Widgets by Mr. V</summary>
		<summary lang="en_NZ">Created by BigNoid, Modded by SiLVO, and Widgets by Mr. V</summary>
		<summary lang="en_US">Created by BigNoid, Modded by SiLVO, and Widgets by Mr. V</summary>
		<summary lang="es_ES">Creada por BigNoid, Modificada por SiLVO, y Widgets por Mr. V</summary>
		<summary lang="et_EE">Looja: BigNoid, muutja: SiLVO, ja vidinad: Mr. V</summary>
		<summary lang="fi_FI">BigNoidin tekemä ja SILVOn muokkaama. Widgetit Mr. V:ltä</summary>
		<summary lang="fr_CA">Créé par BigNoid, modifié by SiLVO, et gadgets logiciels par Mr. V</summary>
		<summary lang="fr_FR">Créé par BigNoid, Moddé par SiLVO, avec les widgets de M. V</summary>
		<summary lang="gl_ES">Created by BigNoid, Modded by SiLVO, and Widgets by Mr. V</summary>
		<summary lang="he_IL">המעטפת נוצרה על ידי BigNoid, Modded by SiLVO, and והיישומונים על ידי Mr. VLO</summary>
		<summary lang="hu_HU">Created by BigNoid, Modded by SiLVO, and Widgets by Mr. V</summary>
		<summary lang="is_IS">Útbúið af BigNoid, breytt af SiLVO, viðmótshlutar eftir Mr. V</summary>
		<summary lang="it_IT">Created by BigNoid, Modded by SiLVO, and Widgets by Mr. V</summary>
		<summary lang="ko_KR">Created by BigNoid, Modded by SiLVO, and Widgets by Mr. V</summary>
		<summary lang="lt_LT">Sukūrė BigNoid, modifikavo SiLVO bei valdiklius pridėjo Mr. V</summary>
		<summary lang="ms_MY">Created by BigNoid, Modded by SiLVO, and Widgets by Mr. V</summary>
		<summary lang="nb_NO">Laget av BigNoid, modifisert av SiLVO, og miniprogrammer av Mr. V.</summary>
		<summary lang="nl_NL">Ontwikkeld door BigNoid, aangepast door SiLVO, en Widgets door Mr. V</summary>
		<summary lang="pl_PL">Stworzona przez BigNoid, zmodyfikowana przez SiLVO, a gadżety autorstwa Mr. V</summary>
		<summary lang="pt_BR">Criado por BigNoid, Modificado por SiLVO e Widgets por Mr. V</summary>
		<summary lang="pt_PT">Criado por BigNoid, Modded por SiLVO, e Widgets por Mr. V</summary>
		<summary lang="ro_RO">Creat de BigNoid, Modificat de SiLVO, și widget-uri deMr. V</summary>
		<summary lang="ru_RU">Created by BigNoid, Modded by SiLVO, and Widgets by Mr. V</summary>
		<summary lang="sk_SK">Vytvoril BigNoid, Upravil SiLVO, miniaplikácie vytvoril Mr. V</summary>
		<summary lang="sv_SE">Created by BigNoid, Modded by SiLVO, and Widgets by Mr. V</summary>
		<summary lang="th_TH">Created by BigNoid, Modded by SiLVO, and Widgets by Mr. V</summary>
		<summary lang="tr_TR">BigNoid tarafından oluşturuldu; Modlar SILVO'dan, Widget'lar Mr. V'den.</summary>
		<summary lang="vi_VN">Created by BigNoid, Modded by SiLVO, and Widgets by Mr. V - Sự trở về</summary>
		<summary lang="zh_CN">Created by BigNoid, Modded by SiLVO, and Widgets by Mr. V</summary>
		<summary lang="zh_TW">由BigNoid原創，SiLVO進行改造，以及由Mr. V製作的小工具</summary>
		<description lang="af_ZA">Heeltemal oor ontwerp om 'n moderne aansig te skep, terwyl die klassieke Aeon gevoel behou word.</description>
		<description lang="de_DE">Komplett neu designed für ein modernes Aussehen und das klassische Aeon-Feeling beizubehalten.</description>
		<description lang="el_GR">Πλήρως επανασχεδιασμένο για να προσφέρει μια μοντέρνα αισθητική, διατηρώντας ταυτόχρονα την κλασική ομορφιά του Aeon.</description>
		<description lang="en_AU">Completely redesigned to create a modern look, while retaining the classic Aeon feel.</description>
		<description lang="en_GB">Completely redesigned to create a modern look, while retaining the classic Aeon feel.</description>
		<description lang="en_NZ">Completely redesigned to create a modern look, while retaining the classic Aeon feel.</description>
		<description lang="en_US">Completely redesigned to create a modern look, while retaining the classic Aeon feel.</description>
		<description lang="es_ES">Completamente rediseñado para crear un aspecto moderno, pero conservando el toque clásico Aeon.</description>
		<description lang="et_EE">Täielikult uuesti disainitud, et luua tänapäevane välimus samas säilitades klassikaline Aeoni tunnetus.</description>
		<description lang="fi_FI">Täysin uudelleensuunniteltu moderni ulkoasu, kuitenkin tuntuen klassiselta Aeonilta.</description>
		<description lang="fr_CA">Complètement remanié pour créer une apparence moderne, tout en conservant l’esprit classique d’Aeon.</description>
		<description lang="fr_FR">Totalement revu pour créer un look moderne, en gardant l'expérience Aeon.</description>
		<description lang="gl_ES">Redeseñado completamente para crear unha aparencia moderna ao tempo que mantén a sensación do clásico Aeon.</description>
		<description lang="he_IL">עיצוב חדש היוצר מראה מודרני אך משמר את ההרגשה של Aeon הקלאסי.</description>
		<description lang="hr_HR">Potpuno preoblikovan moderan izgled, uz zadržani klasični Aeon osjećaj.</description>
		<description lang="hu_HU">Teljesen áttervezett modern kinézet, de megtartva a klasszikus Aeon érzetet.</description>
		<description lang="is_IS">Endurhannað nútímalegt útlit í anda Aeon.</description>
		<description lang="it_IT">Completamente ridisegnato per creare un look moderno, mantenendo la consueta qualità Aeon.</description>
		<description lang="ko_KR">고전적인 Aeon 느낌을 유지하면서 현대적인 모습으로 완전히 다시 디자인하여 만들었습니다.</description>
		<description lang="lt_LT">Pilnai atnaujinta, kad sukurtų modernią išvaizdą, išlaikant klasikinio Aeon pojūtį.</description>
		<description lang="ms_MY">Direka semula sepenuhnya untuk hasilkan penampilan modern, tetapi masih mengekalkan penampilan Aeon klasik.</description>
		<description lang="nb_NO">Helt redesignet for å tilby en moderne utforming, samtidig som den klassiske Aeon-følelsen er beholdt.</description>
		<description lang="nl_NL">Volledig opnieuw ontworpen om een ​​moderne look te creëren, met behoud van het klassieke Aeon-gevoel.</description>
		<description lang="pl_PL">Całkowicie przeprojektowana skóra Aeon, o nowoczesnym wyglądzie, zachowując klasyczny układ skóry Aeon.</description>
		<description lang="pt_BR">Design completamente novo para criar um look moderno, mantendo o feeling do Aeon Clássico.</description>
		<description lang="pt_PT">Completamente redesenhado para criar um visual moderno enquanto retém o toque clássico Aeon.</description>
		<description lang="ro_RO">Complet reproiectat pentru a crea o înfățișare modernă, dar totuși păstrând atmosfera clasică Aeon.</description>
		<description lang="ru_RU">Полностью переработан, чтобы создать современный облик, сохраняя при этом классическое чувство Aeon.</description>
		<description lang="sk_SK">Kompletne prepracovaný dizajn s moderným vzhľadom pri zachovaní klasického štýlu Aeon.</description>
		<description lang="sv_SE">Totalt omarbetad för att skapa ett modernt utseende, samtidigt som man behåller den klassiska Aeon-känslan.</description>
		<description lang="th_TH">การออกแบบใหม่หมดจด เพื่อสร้างรูปลักษณ์ทันสมัย, ​​ขณะที่ยังคงความรู้สึกคลาสสิคของ Aeon.</description>
		<description lang="tr_TR">Modern görünüme kavuşturmak için baştan tasarlandı, klasik Aeon hissi korundu</description>
		<description lang="vi_VN">Thiết kế lại hoàn toàn để tạo nên một phong cách hiện đại, trong khi đó vẫn duy trì một cảm giác Aeon cổ điển.</description>
		<description lang="zh_TW">完全的翻新設計以創造現代化的視覺感受，同時仍維持Aeon的經典外觀。</description>
		<platform>all</platform>
		<license>CC BY-NC-SA 4.0</license>
		<forum>https://forum.kodi.tv/showthread.php?tid=210069</forum>
		<assets>
			<icon>resources/icon.png</icon>
			<fanart>resources/fanart.jpg</fanart>
			<screenshot>resources/screenshots/screenshot-01.jpg</screenshot>
			<screenshot>resources/screenshots/screenshot-02.jpg</screenshot>
			<screenshot>resources/screenshots/screenshot-03.jpg</screenshot>
			<screenshot>resources/screenshots/screenshot-04.jpg</screenshot>
			<screenshot>resources/screenshots/screenshot-05.jpg</screenshot>
			<screenshot>resources/screenshots/screenshot-06.jpg</screenshot>
			<screenshot>resources/screenshots/screenshot-07.jpg</screenshot>
			<screenshot>resources/screenshots/screenshot-08.jpg</screenshot>
			<screenshot>resources/screenshots/screenshot-09.jpg</screenshot>
			<screenshot>resources/screenshots/screenshot-10.jpg</screenshot>
			<screenshot>resources/screenshots/screenshot-11.jpg</screenshot>
			<screenshot>resources/screenshots/screenshot-12.jpg</screenshot>
		</assets>
		<news>[I][COLOR FFFF9800]v10.0.3[/COLOR][/I][CR]- Fix PVR slider bar texture[CR]- Add French MPAA ratings from Jellyfin[I][COLOR FFFF9800]v10.0.2[/COLOR][/I][CR]- Add DialogPVRGuideControls.xml[CR]- Actually Fix playlist statistics infolines[CR][TABS]1[/TABS][LIGHT](Embuary Helper required)[CR]- Fix some views using minute duration instead of hour/minute setting[CR][CR][B]All updates may contain various changes and/or improvements[/B][CR]For a more complete list visit:[CR][I][COLOR FFFF9800]https://github.com/MikeSiLVO/skin.aeon.nox.silvo/commits/master[/COLOR][/I]</news>
	</extension>
</addon>
</addons>